name: Release Latest Changes

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write

    env:
      # Uncomment to enable signing and add SBOM
      ENABLE_SIGNING: true

    steps:
      - uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e

      - uses: actions/setup-go@0caeaed6fd66a828038c2da3c0f662a42862658f
        with:
          go-version: 1.18

      - uses: imjasonh/setup-ko@2c3450ca27f6e6f2b02e72a40f2163c281a1f675
        with:
          version: v0.11.2

      - name: Build the image
        env:
          KO_DOCKER_REPO: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        run: |
          SBOM=cyclonedx
          if [ -z "$ENABLE_SIGNING" ]; then
            SBOM=none
          fi
          ko build --bare --sbom=$SBOM --image-refs=ko.images .

      - uses: sigstore/cosign-installer@48866aa521d8bf870604709cd43ec2f602d03ff2
        if: env.ENABLE_SIGNING == 'true'
        with:
          cosign-release: 'v1.9.0'

      - name: Sign the container image
        if: env.ENABLE_SIGNING == 'true'
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign $(cat ko.images) --force

      - name: Image Env Var
        run: |
          echo "IMAGE=$(cat ko.images)" >> $GITHUB_ENV

      - uses: strongjz/actions/vul-scans@5470c5c46275f16e7b646bdaa64c5bccdc52b852
        id: scans
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image: ${{ env.IMAGE }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          UPLOAD_GITHUB_CODE: true

      - name: Image Vunability scan output
        env:
          SNYK_COUNT: ${{ steps.scans.outputs.SNYK_COUNT }}
          GRYPE_COUNT: ${{ steps.scans.outputs.GRYPE_COUNT }}
          TRIVY_COUNT: ${{ steps.scans.outputs.TRIVY_COUNT }}
        run: |
          echo "Image Vulnerability scan output" >> $GITHUB_STEP_SUMMARY
          echo "Image ID: ${{ env.IMAGE }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Snyk Count: $SNYK_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "Grype Count: $GRYPE_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "Trivy Count: $TRIVY_COUNT" >> $GITHUB_STEP_SUMMARY

      - if: ${{ steps.scans.outputs.TRIVY_COUNT != '0' || steps.scans.outputs.GRYPE_COUNT != '0' || steps.scans.outputs.SNYK_COUNT != '0'  }}
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        env:
          IMAGE: ${{ env.IMAGE }}
          SNYK_COUNT: ${{ steps.scans.outputs.SNYK_COUNT }}
          GRYPE_COUNT: ${{ steps.scans.outputs.GRYPE_COUNT }}
          TRIVY_COUNT: ${{ steps.scans.outputs.TRIVY_COUNT }}
          SLACK_ICON: http://github.com/chainguardian.png?size=48
          SLACK_USERNAME: chainguardian
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: james-test-channel
          SLACK_COLOR: '#8E1600'
          MSG_MINIMAL: 'false'
          SLACK_TITLE: Vulnerability Report for ${{ github.repository }}.
          SLACK_MESSAGE: |
            Snyk Count: ${{ env.SNYK_COUNT }}
            Grype Count: ${{ env.GRYPE_COUNT }}
            Trivy Count: ${{ env.TRIVY_COUNT }}
            Image ID: ${{ env.IMAGE }}
            For detailed logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # Post to slack when things fail.
      - if: ${{ failure()  }}
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7
        env:
          SLACK_ICON: http://github.com/chainguardian.png?size=48
          SLACK_USERNAME: chainguardian
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: james-test-channel
          SLACK_COLOR: '#8E1600'
          MSG_MINIMAL: 'true'
          SLACK_TITLE: Releasing ${{ github.repository }} failed.
          SLACK_MESSAGE: |
            For detailed logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
